<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAy1SURBVHhe7dVlFiDUlYXRO5PudIcECQStQgt3d4cCCnd3
        dy/cvXB3d3f30FN5fadx3to/9llnBl/9319/DAAgm6ADwATqr//8PgCAbIIOABOov/7sAwBEq//8+dsA
        ALIJOgBMoP7847cBAGTroP/aBwBIJugAMIH64/dfBwCQrYP+Sx8AIFn98VsfACBa/d4DAGTroP/cBwBI
        Vr/9+vMAALIJOgBMoIP+Ux8AIFn9+stPAwDIJugAMIH69ecfBwCQrX7pAQCyCToATKB+/umHAQBkE3QA
        mICgA8AE6qcfvx8AQDZBB4AJ1E8/9AEAotWPP3w3AIBsgg4AE6gfvv9uAADZOujf9gEAktUP3/UBAKLV
        9z0AQLYO+jd9AIBk9f23fQCAaPXdt18PACCboAPABOrbb74eAEC2DvpXfQCAZPXt130AgGj1TQ8AkK2D
        /mUfACBZffNVHwAgWn3dAwBk66B/0QcASFZff9kHAIhWX/UAANnqqy8+HwBAtvqyBwDIJugAMIH68vPP
        BgCQrb7oAQCy1Ref9QEAonXQP+0DACSrz3sAgGz1+ad9AIBo9dmnnwwAIJugA8AE6rNP+gAA0erTTz4e
        AEC2+vTjPgBANEEHgAnUJx9/NACAbPXJR30AgGj1cQ8AkK2D/mEfACBZffxhHwAgWn3UAwBkq48++GAA
        ANkEHQAmUB/2AADZ6sP33x8AQLb6oAcAyCboADCB+uC99wYAkK3e7wEAstX77/YBAKJ10N/tAwAkq/d6
        AIBs9d47fQCAaPXuO+8MACBbvft2HwAgmqADwATqnbffHgBAtnrnrT4AQDRBB4AJ1NtvvTUAgGz19pt9
        AIBogg4AE6i33nhzAADZBB0AJlBv9gAA2erN198YAEA2QQeACdQbPQBAtnrjtdcHAJBN0AFgAvX6q68P
        ACBbB/21PgBAsnqtBwDIVq+90gcAiNZBf7UPAJCsXn351QEAZBN0AJhAB/2VPgBAsnrlpVcGAJCtg/5y
        HwAgWb3cAwBkq5df7AMAROugv9QHAEhWL73w0gAAsgk6AEygg/5iHwAgWb34/IsDAMgm6AAwgXrh+RcG
        AJCtXniuDwAQTdABYAL1/LPPDwAgm6ADwAQEHQAmUM8989wAALIJOgBMQNABYAL17NPPDgAgm6ADwATq
        maeeHQBAtg76M30AgGSCDgATqKeffGYAANk66E/3AQCS1dNP9AEAotVTPQBAtg76U30AgGT15ONPDQAg
        m6ADwAQ66E/2AQCS1ROPPTkAgGyCDgATqCcefWIAANnq8R4AIJugA8AE6rFHHh8AQDZBB4AJCDoATKAe
        ffixAQBkE3QAmEA9uqwPABCtHln26AAAsgk6AEygHn7o0QEAZOugP9IHAEhWDz/YBwCIVst6AIBsHfSH
        +wAAyWrZA30AgGj1UA8AkK2DvqwPAJCsHrx/2QAAsgk6AEygHrzvoQEAZKsHegCAbIIOABOoB+59cAAA
        2er+HgAgm6ADwATq/nseGABAtrqvBwDIVvfd3QcAiFb33n3/AACyCToATKDuvasPABCt7rnrvgEAZBN0
        AJhA3XNnHwAgWt19570DAMhWd9/RBwCIVnfdcc8AALIJOgBMoO66vQ8AEK3uvP3uAQBkqztv6wMARBN0
        AJhA3XHbXQMAyFZ33NoHAIhWt/cAANk66Hf2AQCS1e239AEAotVtPQBAtrrt5jsGAJBN0AFgAnVrDwCQ
        rW696fYBAGSrW3oAgGyCDgATqFtuvG0AANnq5h4AIFvdfEMfACBaB/3WPgBAsrqpBwDIVjct7QMARKsb
        l94yAIBsdeP1fQCAaIIOABOoG66/eQAA2eqG6/oAANEEHQAmUEuvu2kAANlq6bV9AIBogg4AE6jrr7lx
        AADZBB0AJlDX9QAA2eq6q28YAEA2QQeACdS1PQBAtrr2qqUDAMgm6AAwgbrmyqUDAMjWQb++DwCQrK7u
        AQCy1dVX9AEAonXQr+sDACSrq3oAgGx11eV9AIBoHfRr+wAAyerKy64dAEA2QQeACdQVl10zAIBsdcWl
        fQCAaIIOABOoyy+5egAA2QQdACYg6AAwgbrs4qsGAJBN0AFgAnVpDwCQrS696MoBAGQTdACYQF1y4ZUD
        AMjWQb+iDwCQTNABYAJ18QVXDAAgWwf98j4AQLK6qAcAyFYXnd8HAIjWQb+sDwCQrC4877IBAGQTdACY
        QAf90j4AQLK64NxLBwCQrYN+SR8AIFldcE4fACBand8DAGTroF/cBwBIVuedffEAALIJOgBMoIN+UR8A
        IFmde9ZFAwDIJugAMIE698wLBwCQrc7pAQCyCToATKDOPuOCAQBkE3QAmICgA8AE6qzTzx8AQDZBB4AJ
        1Fmn9QEAotWZp503AIBsgg4AE6gzTj1vAADZOujn9gEAktUZp/QBAKLV6T0AQLYO+jl9AIBkdfrJfQCA
        aHVaDwCQrYN+dh8AIFmdetLZAwDIJugAMIE69cSzBgCQrU7pAQCyCToATKBOOeHMAQBkq5N7AIBsgg4A
        E6iTjj9jAADZBB0AJlAnHdcHAIhWJx53+gAAsgk6AEygTjy2DwAQrU449rQBAGQTdACYQJ1wTB8AIFod
        f8ypAwDIVscf3QcAiFbH9QAA2Trop/QBAJLVcUf1AQCi1bE9AEC2OvbIkwcAkE3QAWACdUwPAJCtjjni
        pAEAZKujewCAbIIOABOoow8/cQAA2eqoHgAgWx11WB8AIFoH/YQ+AECyOrIHAMhWRx7aBwCIVkccevwA
        ALIJOgBMoI5Y0gcAiFaHLzluAADZ6vBD+gAA0QQdACZQhx1y7AAAstVhB/cBAKLVoQcfMwCAbIIOABOo
        Qw/qAwBEqyUHHT0AgGy1ZHEfACCaoAPABOqQxUcNACBbHXJgHwAgWh3cAwBkq4MPOHIAANkEHQAmUAf1
        AADZ6qD9jxgAQDZBB4AJ1OIeACBbLd7v8AEAZBN0AJhAHbjv4QMAyNZBP6wPAJCsDugBALLVAfv0AQCi
        ddAP7QMAJKv9ewCAbLX/3n0AgGgd9CV9AIBktd9eSwYAkE3QAWACte9ehwwAIFvtu2cfACCaoAPABGqf
        PQ4eAEA2QQeACQg6AEyg9t79oAEAZBN0AJhA7dUDAGSrvXZbPACAbIIOABOoPXddPACAbB30A/sAAMkE
        HQAmUHvscuAAALJ10A/oAwAkq917AIBstfvOfQCAaB30/fsAAMlqt532HwBANkEHgAl00PfrAwAkq113
        3G8AANkEHQAm0EHftw8AkKx22WHfAQBkE3QAmEDtvP0+AwDIJugAMAFBB4AJ1E7b7T0AgGyCDgATqJ22
        7QMARKsdt91rAADZBB0AJlA7bLPXAACyddD37AMAJBN0AJhAbb/1ngMAyNZB36MPAJCstt+qDwAQrbbr
        AQCyddB37wMAJKttt9x9AADZOui79QEAkgk6AEygttlitwEAZOug79oHAEhW22zeBwCIVlv3AADZOui7
        9AEAktVWm+0yAIBsgg4AE6itNt15AADZasseACCboAPABGrLTXYaAEC22qIHAMgm6AAwgdp84x0HAJBN
        0AFgArX5Rn0AgGi12UY7DAAgm6ADwARqsw37AADRatMNtx8AQDZBB4AJ1KaL+gAA0WqTRdsNACBbbbJB
        HwAgWm3cAwBk66Bv2wcASFYbr98HAIhWG/UAANk66Nv0AQCS1Ubr9QEAotWGPQBAttpw3a0HAJCtFvUA
        ANkEHQAmUIvW2WoAANlqgx4AIFttsHYfACBaB33LPgBAslq/BwDIVusv7AMARKv1Fm4xAIBsgg4AE6j1
        FvQBAKLVugs2HwBAtlp3rT4AQDRBB4AJ1DprbTYAgGy1zpp9AIBotXYPAJCtg75pHwAgWa29Rh8AIFot
        7AEAstXC1TcZAEA2QQeACdSCHgAgWy1YbeMBAGSrtXoAgGy11qp9AIBoHfSN+gAAyWrNHgAgW6357z4A
        QLQO+oZ9AIBktUYPAJCt1lilDwAQrYO+qA8AkKxWX3nRAACyCToATKBWW3mDAQBkq9X+1QcAiNZBX78P
        AJCsVu0BALLVqiv1AQCiddDX6wMAJKt/r7jeAACyCToATKBWWXHdAQBkq1VW6AMARBN0AJhArbzCOgMA
        yFYrL98HAIgm6AAwgfrXP9ceAEA2QQeACdRKPQBAtlrpHwsHAJBN0AFgArXicgsHAJCtg76gDwCQTNAB
        YAK1wt8XDAAgWwd9rT4AQLJavgcAyFbL/28fACBaB33NPgBAsvrn/6w5AIBsgg4AE+igr9EHAEhW//jb
        GgMAyCboADCBWu5vqw8AIFst9999AIBogg4AE6i//9dqAwBIttr4f7zvcOhmY1AHAAAAAElFTkSuQmCC
</value>
  </data>
</root>